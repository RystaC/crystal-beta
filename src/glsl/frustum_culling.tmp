#version 450

struct AABB {
    vec4 box_min, box_max;
};

layout(set = 0, binding = 0) uniform Frustum {
    vec4 planes[6];
};

layout(std430, set = 1, binding = 0) buffer readonly Instance {
    AABB boxes[];
};

layout(std430, set = 1, binding = 1) buffer writeonly Result {
    uint indices[];
};

bool is_in_frustum(AABB box) {
    for(int i = 0; i < 6; ++i) {
        int r = 0;
        r += (dot(planes[i], vec4(box.box_min.x, box.box_min.y, box.box_min.z, 1.0f)) < 0.0f) ? 1 : 0;
        r += (dot(planes[i], vec4(box.box_max.x, box.box_min.y, box.box_min.z, 1.0f)) < 0.0f) ? 1 : 0;
        r += (dot(planes[i], vec4(box.box_min.x, box.box_max.y, box.box_min.z, 1.0f)) < 0.0f) ? 1 : 0;
        r += (dot(planes[i], vec4(box.box_max.x, box.box_max.y, box.box_min.z, 1.0f)) < 0.0f) ? 1 : 0;
        r += (dot(planes[i], vec4(box.box_min.x, box.box_min.y, box.box_max.z, 1.0f)) < 0.0f) ? 1 : 0;
        r += (dot(planes[i], vec4(box.box_max.x, box.box_min.y, box.box_max.z, 1.0f)) < 0.0f) ? 1 : 0;
        r += (dot(planes[i], vec4(box.box_min.x, box.box_max.y, box.box_max.z, 1.0f)) < 0.0f) ? 1 : 0;
        r += (dot(planes[i], vec4(box.box_max.x, box.box_max.y, box.box_max.z, 1.0f)) < 0.0f) ? 1 : 0;
        if(r == 8) return false;
    }

    return true;
}

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() {

}